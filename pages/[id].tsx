import { deleteDoc, doc, getDoc, Timestamp } from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { Preview } from "../components/Preview";
import { db } from "../utils/firebase";

const App = () => {
	const [data, setData] = useState(undefined);
	const router = useRouter();
	const id = router.query["id"];
	useEffect(() => {
		if (id && typeof id === "string") {
			const saved = JSON.parse(localStorage.getItem(id) || "null");

			if (saved?.from) {
				console.log("^_^ Log \n file: [id].tsx:23 \n saved", saved);

				const isAfter =
					Timestamp.now() >
					new Timestamp(saved.date.seconds, saved.date.nanoseconds);
				console.log("^_^ Log \n file: [id].tsx:26 \n isAfter", isAfter);
				if (
					(isAfter && saved.beforeMessage)
				) {					console.log("^_^ Log \n file: [id].tsx:30 \n isAfter && saved.beforeMessage", isAfter && saved.beforeMessage);

					localStorage.removeItem(id);
					setData(undefined);
				} else setData(saved);
			} else
				getDoc(doc(db, "message", id)).then((docSnap) => {
					setData(docSnap.data() as any);
					if (docSnap.exists()) {
						const isAfter = Timestamp.now() > docSnap.data().date;
						const saveData = docSnap.data();
						if (isAfter) {
							delete saveData.beforeMessage;
							delete saveData.beforePic;
						} else {
							delete saveData.afterMessage;
							delete saveData.afterPic;
						}
						localStorage.setItem(id, JSON.stringify(saveData));
						deleteDoc(doc(db, "message", id));
					}
				});
		}
	}, [id]);

	return (
		<>
			<Head>
				<title>メッセージ</title>
				{/* <meta name="description" content="Generated by create next app" />
    <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Preview data={data} />
			<footer className="max-w-screen-2xl px-4 md:px-8 mx-auto">
				<div className="flex flex-col items-center border-t pt-6">
					{/* nav - start */}
					<nav className="flex flex-wrap justify-center md:justify-start gap-x-4 gap-y-2 md:gap-6 mb-4">
						<a
							className="text-gray-400 hover:text-indigo-500 active:text-indigo-600 transition duration-100"
							onClick={() => {
								window.open("https://deeper.webbel.net", "_blank");
							}}
						>
							Deeper
						</a>
					</nav>
				</div>

				<div className="text-gray-400 text-sm text-center py-8">
					© 2022 - Webbel(Shu Nagumo)
				</div>
			</footer>
		</>
	);
};
export default App;
